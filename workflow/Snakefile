from snakemake.utils import min_version
min_version("5.12.0")

configfile: "config/config.yaml"

report: "report/workflow.rst"

scattergather:
    calling=16

# Allow users to fix the underlying OS via singularity.
container: "docker://continuumio/miniconda3"

include: "rules/common.smk"
include: "rules/benchmarking.smk"
include: "rules/ref.smk"
include: "rules/trimming.smk"
include: "rules/mapping.smk"
include: "rules/candidate_calling.smk"
include: "rules/calling.smk"
include: "rules/annotation.smk"
include: "rules/filtering.smk"
include: "rules/report.smk"
include: "rules/tmb.smk"
include: "rules/vega.smk"
include: "rules/utils.smk"
include: "rules/primers.smk"
include: "rules/table.smk"
include: "rules/pool.smk"

groups = samples["group"].unique()

#batches = "all"
#if is_activated("report/stratify"):
#    batches = samples[config["report"]["stratify"]["by-column"]].unique()


#rule all:
#    input:
        #get_final_output(),
        #get_tmb_targets(),


# rule all:
#     input:
#         expand("results/recal/{sample}.sorted.bam", sample=samples.sample_name),

        # expand("results/candidates/hg19/{person_id}.hg19_candidates.vcf", person_id=person_id),
        # ##expand("results/candidates/hg19/{person_id}.hg19_candidates.bed", person_id=person_id),
        # expand("results/candidates/hg38/{person_id}.hg38_candidates.vcf", person_id=person_id),
        # "resources/hg19ToHg38.over.chain.gz",
        # expand("results/candidates/hg38/{person_id}.hg38_candidates.{ext}", person_id=person_id, ext=["vcf", "rejected.vcf"]),
        #
        # ## preprocess
        # expand("results/observations/{person_id}.{father_pool_id}.father_pool_observations.bcf", person_id=person_id, father_pool_id=config["father_pool_id"]),
        # expand("results/observations/{person_id}.{mother_pool_id}.mother_pool_observations.bcf", person_id=person_id, mother_pool_id=config["mother_pool_id"]),
        # expand("results/calls/hg38/{person_id}.{father_pool_id}.{mother_pool_id}.calls.vcf", person_id=person_id, father_pool_id=config["father_pool_id"], mother_pool_id=config["mother_pool_id"]),
        # "resources/hg38ToHg19.over.chain.gz",
        # expand("resources/genome_hg19.{ext}", ext=["fasta", "fasta.dict"]),
        # expand("results/calls/hg19/{person_id}.{father_pool_id}.{mother_pool_id}.calls.vcf", person_id=person_id, father_pool_id=config["father_pool_id"], mother_pool_id=config["mother_pool_id"], ext=["vcf", "rejected.vcf"]),
        #expand("results/calls/hg38/AF/{person_id}.{father_pool_id}.{mother_pool_id}.tsv", person_id=person_id, father_pool_id=config["father_pool_id"], mother_pool_id=config["mother_pool_id"]),

rule benchmark:
    input:
        expand("benchmarking/{query}.summary", query=config["calling"]["fdr-control"]["events"])
